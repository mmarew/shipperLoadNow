 
def node_require(script)
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end

# Load React Native and Permissions setup scripts
node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

# Set minimum supported iOS version
platform :ios, '15.1'
prepare_react_native_project!

# Handle dynamic framework linkage
linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'shipperLoadNow' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  # ✅ Modular headers only for Firebase
  pod 'FirebaseCore', modular_headers: true
  pod 'GoogleUtilities', modular_headers: true

  # ✅ Setup required iOS permissions
  setup_permissions([
    'Camera',
    'LocationAccuracy',
    'LocationAlways',
    'LocationWhenInUse',
    'MediaLibrary',
    'Microphone',
    'Motion',
    'Notifications',
    'PhotoLibrary',
    'PhotoLibraryAddOnly',
    'Reminders',
  ])

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
    )

    # ✅ Fix Hermes & ReactRuntimeApple build issues
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
      end
    end
  end
end
